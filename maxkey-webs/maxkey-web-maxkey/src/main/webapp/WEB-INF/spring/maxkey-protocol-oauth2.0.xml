<?xml version="1.0" encoding="UTF-8" ?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:sec="http://www.springframework.org/schema/security"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:oauth20="http://www.springframework.org/schema/security/oauth2"
		xmlns:oauth10a="http://www.springframework.org/schema/security/oauth"
		xsi:schemaLocation="
			http://www.springframework.org/schema/security/oauth2
			http://www.springframework.org/schema/security/spring-security-oauth2.xsd
			http://www.springframework.org/schema/security/oauth 
			http://www.springframework.org/schema/security/spring-security-oauth.xsd
	        http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
	        http://www.springframework.org/schema/util     
	        http://www.springframework.org/schema/util/spring-util.xsd
	        http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- oauth.provider-->
	<context:component-scan base-package="org.maxkey.web.oauth.approval.controller" /> 
	<!-- oauth.provider userinfo-->
	<context:component-scan base-package="org.maxkey.web.oauth.userinfo.controller" />
	
	<!-- OpenID Connect 1.0  -->
	<!-- 
	 * Self-issued Provider Metadata
	 *
	 * http://openid.net/specs/openid-connect-core-1_0.html#SelfIssued 
	 * -->
	<bean id="oidcProviderMetadata" class="com.connsec.config.oidc.OIDCProviderMetadataDetails">
		<property name="issuer" value="${config.oidc.metadata.issuer}" />
		<property name="authorizationEndpoint" value="${config.oidc.metadata.authorizationEndpoint}" />
		<property name="tokenEndpoint" value="${config.oidc.metadata.tokenEndpoint}" />
		<property name="userinfoEndpoint" value="${config.oidc.metadata.userinfoEndpoint}" />
	</bean>
	
	<bean id="tokenEnhancer" class="com.connsec.oidc.idtoken.OIDCIdTokenEnhancer">
		<property name="providerMetadata" ref="oidcProviderMetadata" />
		<property name="jwtSignerService" ref="jwtSignerValidationService" />
		<property name="jwtEnDecryptionService" ref="jwtEncryptionService" />
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="jwkSetKeyStore" class="com.connsec.crypto.jose.keystore.JWKSetKeyStore">
		<property name="location" value="classpath:config/keystore.jwks" />
	</bean>
	
	<bean id="jwtSignerValidationService" class="com.connsec.crypto.jwt.signer.service.impl.DefaultJwtSigningAndValidationService">
		<constructor-arg name="keyStore" ref="jwkSetKeyStore" />
		<property name="defaultSignerKeyId" value="connsec_rsa" />
 		<property name="defaultSigningAlgorithmName" value="RS256" />
	</bean>

	<bean id="jwtEncryptionService" class="com.connsec.crypto.jwt.encryption.service.impl.DefaultJwtEncryptionAndDecryptionService">
		<constructor-arg name="keyStore" ref="jwkSetKeyStore" />
		<property name="defaultAlgorithm" value="RSA1_5" />
		<property name="defaultDecryptionKeyId" value="connsec_rsa" />
		<property name="defaultEncryptionKeyId" value="connsec_rsa" />
	</bean>

	<bean id="jwtLoginService" class="com.connsec.web.authentication.support.jwt.JwtLoginService">
		<property name="jwtSignerValidationService" ref="jwtSignerValidationService" />
 		<property name="jwtProviderMetadata"  ref="oidcProviderMetadata" />
	</bean>
		
	<!-- OpenID Connect 1.0  End -->
	
   <!--  Follow is  just for Spring security OAuth 2.0 configration -->
	<authentication-manager id="oauth20ClientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="oauth20ClientDetailsUserService" />
	</authentication-manager>
	
	<bean id="oauth20OauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="connsec" />
	</bean>

	<bean id="oauth20ClientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="connsec/client" />
		<property name="typeName" value="Basic" />
	</bean>
	
	<bean id="oauth20OauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<bean id="oauth20ClientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="oauth20ClientAuthenticationManager" />
	</bean>
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="oauth20ClientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="oauth20JdbcClientDetailsService" />
		<property name="passwordEncoder" ref="passwordReciprocal"></property>
	</bean>
	<!--  
	<bean id="oauth20AuthorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<constructor-arg ref="dataSource" /> 
	</bean>
	
	<bean id="oauth20TokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore" >
		<constructor-arg ref="dataSource" />
	</bean>
	 -->
	<bean id="oauth20AuthorizationCodeServices" class="org.springframework.security.oauth2.provider.code.RedisAuthorizationCodeServices">
		<constructor-arg ref="redisConnectionFactory" /> 
	</bean>
	
	<bean id="oauth20TokenStore" class="org.springframework.security.oauth2.provider.token.store.RedisTokenStore" >
		<constructor-arg ref="redisConnectionFactory" />
	</bean>
	
	<bean id="oauth20TokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore"  ref="oauth20TokenStore"/>
		<property name="supportRefreshToken" value="true" />
		<property name="tokenEnhancer" ref="tokenEnhancer" />
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="approvalStore" class="org.springframework.security.oauth2.provider.approval.TokenApprovalStore">
		<property name="tokenStore" ref="oauth20TokenStore" />
	</bean>
	
	<bean id="requestFactory" class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<constructor-arg name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="oauth20UserApprovalHandler" class="com.connsec.web.oauth.approval.controller.OAuth20UserApprovalHandler">
		<property name="approvalStore" ref="approvalStore" />
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService"/>
		<property name="requestFactory" ref="requestFactory" />
	</bean>
	
	<oauth20:authorization-server client-details-service-ref="oauth20JdbcClientDetailsService" token-services-ref="oauth20TokenServices"
		user-approval-handler-ref="oauth20UserApprovalHandler">
		<oauth20:authorization-code authorization-code-services-ref="oauth20AuthorizationCodeServices"></oauth20:authorization-code>
		<oauth20:implicit />
		<oauth20:refresh-token />
		<oauth20:client-credentials />
		<oauth20:password/>
	</oauth20:authorization-server> 

	<oauth20:resource-server id="oauth20ResourceServerFilter" resource-id="connsec" token-services-ref="oauth20TokenServices" />

	<bean id="oauth20JdbcClientDetailsService" class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
		<constructor-arg ref="dataSource" /> 
		<property name="passwordEncoder" ref="passwordReciprocal"></property>
	</bean>
	
   	<!-- OAuth 2  Token-->
	<http pattern="/oauth/v20/token" create-session="stateless" authentication-manager-ref="oauth20ClientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<!-- <csrf disabled="true"/>-->
		<intercept-url pattern="/oauth/v20/token" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="oauth20ClientAuthenticationEntryPoint" />
		
		<!-- include this only if you need to authenticate clients via request parameters -->
		<custom-filter ref="oauth20ClientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
		<access-denied-handler ref="oauth20OauthAccessDeniedHandler"/>
	</http>
	
	<!-- OAuth 2  Authorize-->
	<http pattern="/oauth/v20/**" use-expressions="false"  disable-url-rewriting="false"  authentication-manager-ref="oauth20ClientAuthenticationManager"  xmlns="http://www.springframework.org/schema/security">
		<access-denied-handler error-page="/login"/>
		<intercept-url pattern="/oauth/v20/authz" access="IS_AUTHENTICATED_ANONYMOUSLY,ROLE_USER"/>
		<form-login authentication-failure-url="/login" 
						default-target-url="/index" 
						login-page="/login" 
						login-processing-url="/login.do" 
						authentication-success-handler-ref="savedRequestSuccessHandler"/>
		<!-- self define filter for  spring-security!-->
		<!-- <custom-filter before="FORM_LOGIN_FILTER" ref="oauthFilter"/> -->
	</http>
	
	<oauth20:expression-handler id="oauthExpressionHandler" />

	<oauth20:web-expression-handler id="oauthWebExpressionHandler" />
	
</beans>