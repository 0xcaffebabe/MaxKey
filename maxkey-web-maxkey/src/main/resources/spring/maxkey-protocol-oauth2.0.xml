<?xml version="1.0" encoding="UTF-8" ?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
	        http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
	        http://www.springframework.org/schema/util     
	        http://www.springframework.org/schema/util/spring-util.xsd
	        http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- oauth.provider-->
	<context:component-scan base-package="org.maxkey.authz.oauth2.provider.endpoint" />
	<!-- oauth.provider userinfo-->
	<context:component-scan base-package="org.maxkey.authz.oauth2.provider.userinfo.endpoint" />
	
	<context:component-scan base-package="org.maxkey.authz.oauth2.provider.approval.controller" /> 
	
	<!-- OpenID Connect 1.0  -->
	<!-- 
	 * Self-issued Provider Metadata
	 *
	 * http://openid.net/specs/openid-connect-core-1_0.html#SelfIssued 
	 * -->
	<bean id="oidcProviderMetadata" class="org.maxkey.config.oidc.OIDCProviderMetadataDetails">
		<property name="issuer" value="${config.oidc.metadata.issuer}" />
		<property name="authorizationEndpoint" value="${config.oidc.metadata.authorizationEndpoint}" />
		<property name="tokenEndpoint" value="${config.oidc.metadata.tokenEndpoint}" />
		<property name="userinfoEndpoint" value="${config.oidc.metadata.userinfoEndpoint}" />
	</bean>
	
	<bean id="tokenEnhancer" class="org.maxkey.authz.oidc.idtoken.OIDCIdTokenEnhancer">
		<property name="providerMetadata" ref="oidcProviderMetadata" />
		<property name="jwtSignerService" ref="jwtSignerValidationService" />
		<property name="jwtEnDecryptionService" ref="jwtEncryptionService" />
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="jwkSetKeyStore" class="org.maxkey.crypto.jose.keystore.JWKSetKeyStore">
		<property name="location" value="classpath:config/keystore.jwks" />
	</bean>
	
	<bean id="jwtSignerValidationService" class="org.maxkey.crypto.jwt.signer.service.impl.DefaultJwtSigningAndValidationService">
		<constructor-arg name="keyStore" ref="jwkSetKeyStore" />
		<property name="defaultSignerKeyId" value="maxkey_rsa" />
 		<property name="defaultSigningAlgorithmName" value="RS256" />
	</bean>

	<bean id="jwtEncryptionService" class="org.maxkey.crypto.jwt.encryption.service.impl.DefaultJwtEncryptionAndDecryptionService">
		<constructor-arg name="keyStore" ref="jwkSetKeyStore" />
		<property name="defaultAlgorithm" value="RSA1_5" />
		<property name="defaultDecryptionKeyId" value="maxkey_rsa" />
		<property name="defaultEncryptionKeyId" value="maxkey_rsa" />
	</bean>
	<!--
	<bean id="jwtLoginService" class="com.connsec.web.authentication.support.jwt.JwtLoginService">
		<property name="jwtSignerValidationService" ref="jwtSignerValidationService" />
 		<property name="jwtProviderMetadata"  ref="oidcProviderMetadata" />
	</bean>
	-->
	<!-- OpenID Connect 1.0  End -->
	
	<!--  In Memory -->
	<bean id="oauth20AuthorizationCodeServices" class="org.maxkey.authz.oauth2.provider.code.InMemoryAuthorizationCodeServices">
	</bean>
	
	<bean id="oauth20TokenStore" class="org.maxkey.authz.oauth2.provider.token.store.InMemoryTokenStore" >
	</bean>
	
	 <!--  Redis 
	<bean id="oauth20AuthorizationCodeServices" class="org.maxkey.authz.oauth2.provider.code.RedisAuthorizationCodeServices">
		<constructor-arg ref="redisConnectionFactory" /> 
	</bean>
	
	<bean id="oauth20TokenStore" class="org.maxkey.authz.oauth2.provider.token.store.RedisTokenStore" >
		<constructor-arg ref="redisConnectionFactory" />
	</bean>
	-->
	
	
	<bean id="converter" class="org.maxkey.authz.oauth2.provider.token.store.JwtAccessTokenConverter">
	</bean>
	
	<bean id="oauth20JdbcClientDetailsService" class="org.maxkey.authz.oauth2.provider.client.JdbcClientDetailsService">
		<constructor-arg ref="dataSource" /> 
		<property name="passwordEncoder" ref="passwordReciprocal"></property>
	</bean>
	
	<bean id="oauth20ClientDetailsUserService" class="org.maxkey.authz.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="oauth20JdbcClientDetailsService" />
		<property name="passwordEncoder" ref="passwordReciprocal"></property>
	</bean>
	
	
	<bean id="oauth20TokenServices" class="org.maxkey.authz.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore"  ref="oauth20TokenStore"/>
		<property name="supportRefreshToken" value="true" />
		<property name="tokenEnhancer" ref="tokenEnhancer" /> 
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="oauth20ApprovalStore" class="org.maxkey.authz.oauth2.provider.approval.TokenApprovalStore">
		<property name="tokenStore" ref="oauth20TokenStore" />
	</bean>
	
	<bean id="oAuth2RequestFactory" class="org.maxkey.authz.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<constructor-arg name="clientDetailsService" ref="oauth20JdbcClientDetailsService" />
	</bean>
	
	<bean id="oauth20UserApprovalHandler" class="org.maxkey.authz.oauth2.provider.approval.controller.OAuth20UserApprovalHandler">
		<property name="approvalStore" ref="oauth20ApprovalStore" />
		<property name="clientDetailsService" ref="oauth20JdbcClientDetailsService"/>
		<property name="requestFactory" ref="oAuth2RequestFactory" />
	</bean>
	
	<bean id="oauth20ClientAuthenticationManager" class="org.springframework.security.authentication.ProviderManager">  
        <constructor-arg>
            <list>  
                <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
                	<property name="passwordEncoder">
                		<bean class="org.springframework.security.crypto.password.NoOpPasswordEncoder "/>
                	</property> 
        			<property name="userDetailsService" ref="oauth20ClientDetailsUserService"></property>  
    			</bean>
            </list>  
       </constructor-arg>
    </bean>  
</beans>